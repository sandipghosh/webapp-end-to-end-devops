apiVersion: apps/v1
kind: Deployment
{{- with .Values.backend }}
metadata:
  name: {{ .hostName }}
  {{- if $.Release.Namespace }}
  namespace: {{ $.Release.Namespace }}
  {{- else }}
  namespace: {{ $.Values.commonConfig.namespace }}
  {{- end }}
  labels:
    app: {{ .hostName }}
spec:
  replicas: {{ .replicaCount }}
  selector:
    matchLabels:
      app: {{ .hostName }}
  template:
    metadata:
      labels:
        app: {{ .hostName }}
    spec:
      containers:
        - name: {{ .hostName }}
          image: "{{ .image.repository }}:{{ .image.tag }}"
          imagePullPolicy: {{ .image.pullPolicy }}
          command: {{ toJson .command }}
          args:
            - {{ tpl .args $ }}
          ports:
            - name: "tcp-port"
              containerPort: {{ .service.containerPort }}
              protocol: {{ .service.protocol }}

          envFrom:
            - configMapRef:
                name: "{{ $.Values.backend.hostName }}-configmap"
            - secretRef:
                name: "{{ $.Values.backend.hostName }}-secret"
              
          {{- if .startupProbe.enabled }}
          startupProbe:
            {{- tpl (toYaml .startupProbe.config) $ | nindent 12 }}
          {{- end }}
          
          {{- if .readinessProbe.enabled }}
          readinessProbe:
            {{- tpl (toYaml .readinessProbe.config) $ | nindent 12 }}
          {{- end }}

          {{- if .livenessProbe.enabled }}
          livenessProbe:
            {{- tpl (toYaml .livenessProbe.config) $ | nindent 12 }}
          {{- end }}

          {{- with .resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
{{- end }}
      
